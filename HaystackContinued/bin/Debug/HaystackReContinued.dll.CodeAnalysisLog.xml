<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="c:\program files (x86)\microsoft visual studio\2019\community\team tools\static analysis tools\fxcop\Xml\CodeAnalysisReport.xsl"?>
<FxCopReport Version="16.0">
 <Namespaces>
  <Namespace Name="HaystackReContinued">
   <Messages>
    <Message Id="Re" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'Re' in namespace name 'HaystackReContinued' by changing it to 'RE'.</Issue>
    </Message>
   </Messages>
  </Namespace>
 </Namespaces>
 <Targets>
  <Target Name="D:\Users\jbb\github\HaystackContinued\HaystackContinued\bin\Debug\HaystackReContinued.dll">
   <Modules>
    <Module Name="haystackrecontinued.dll">
     <Messages>
      <Message TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
       <Issue Name="NoStrongName" Certainty="95" Level="CriticalError">Sign 'HaystackReContinued.dll' with a strong name key.</Issue>
      </Message>
      <Message Id="Re" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
       <Issue Name="Assembly" Certainty="85" Level="Error">Correct the casing of 'Re' in assembly name 'HaystackReContinued.dll' by changing it to 'RE'.</Issue>
      </Message>
      <Message TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
       <Issue Certainty="95" Level="Error">Mark 'HaystackReContinued.dll' with CLSCompliant(true) because it exposes externally visible types.</Issue>
      </Message>
     </Messages>
     <Namespaces>
      <Namespace Name="HaystackReContinued">
       <Types>
        <Type Name="API" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="API" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'API' in type name 'API' by changing it to 'Api'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#APIDestroy()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">'API.APIDestroy()' appears to have no upstream public or protected callers.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning">The 'this' parameter (or 'Me' in Visual Basic) of 'API.APIDestroy()' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#APIReady" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'API.APIReady' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#fetch" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'API.fetch' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetPosition(System.Single,System.Single)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="x" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning">In method 'API.SetPosition(float, float)', consider providing a more meaningful name than parameter name 'x'.</Issue>
            </Message>
            <Message Id="y" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning">In method 'API.SetPosition(float, float)', consider providing a more meaningful name than parameter name 'y'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetVisibility(VesselType,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="vt" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'API.SetVisibility(VesselType, bool)', correct the spelling of 'vt' in parameter name 'vt' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Comparers" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#DefaultCelestialComparer" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">Remove the read-only designation from 'Comparers.DefaultCelestialComparer' or change the field to one that is an immutable reference type. If the reference type 'IComparer&lt;CelestialBody&gt;' is, in fact, immutable, exclude this message.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Reverse`1(System.Collections.Generic.IComparer`1&lt;!!0&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="orig" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'Comparers.Reverse&lt;T&gt;(this IComparer&lt;T&gt;)', correct the spelling of 'orig' in parameter name 'orig' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Comparers+CombinedComparer`1" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'Comparers.CombinedComparer&lt;T&gt;'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Combine`1(System.Collections.Generic.IComparer`1&lt;!!0&gt;,System.Collections.Generic.IComparer`1&lt;!!0&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Remove 'Comparers.CombinedComparer&lt;T&gt;.Combine&lt;V&gt;(IComparer&lt;V&gt;, IComparer&lt;V&gt;)' from 'Comparers.CombinedComparer&lt;T&gt;' or make it an instance member.</Issue>
            </Message>
            <Message Id="V" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning">On method 'Comparers.CombinedComparer&lt;T&gt;.Combine&lt;V&gt;(IComparer&lt;V&gt;, IComparer&lt;V&gt;)', consider providing a more meaningful name than generic type parameter name 'V'.</Issue>
            </Message>
            <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameter" Certainty="95" Level="Error">On method 'Comparers.CombinedComparer&lt;T&gt;.Combine&lt;V&gt;(IComparer&lt;V&gt;, IComparer&lt;V&gt;)', prefix generic type parameter name 'V' with 'T'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Comparers" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError">Consider a design where 'Comparers.CombinedComparer&lt;T&gt;.Comparers' doesn't nest generic type 'ReadOnlyCollection&lt;IComparer&lt;T&gt;&gt;'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FromList`1(System.Collections.Generic.List`1&lt;System.Collections.Generic.IComparer`1&lt;!!0&gt;&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Remove 'Comparers.CombinedComparer&lt;T&gt;.FromList&lt;V&gt;(List&lt;IComparer&lt;V&gt;&gt;)' from 'Comparers.CombinedComparer&lt;T&gt;' or make it an instance member.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;IComparer&lt;V&gt;&gt;' in 'Comparers.CombinedComparer&lt;T&gt;.FromList&lt;V&gt;(List&lt;IComparer&lt;V&gt;&gt;)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError">Consider a design where 'Comparers.CombinedComparer&lt;T&gt;.FromList&lt;V&gt;(List&lt;IComparer&lt;V&gt;&gt;)' doesn't nest generic type 'List&lt;IComparer&lt;V&gt;&gt;'.</Issue>
            </Message>
            <Message Id="V" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning">On method 'Comparers.CombinedComparer&lt;T&gt;.FromList&lt;V&gt;(List&lt;IComparer&lt;V&gt;&gt;)', consider providing a more meaningful name than generic type parameter name 'V'.</Issue>
            </Message>
            <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameter" Certainty="95" Level="Error">On method 'Comparers.CombinedComparer&lt;T&gt;.FromList&lt;V&gt;(List&lt;IComparer&lt;V&gt;&gt;)', prefix generic type parameter name 'V' with 'T'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FromOne`1(System.Collections.Generic.IComparer`1&lt;!!0&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Remove 'Comparers.CombinedComparer&lt;T&gt;.FromOne&lt;V&gt;(IComparer&lt;V&gt;)' from 'Comparers.CombinedComparer&lt;T&gt;' or make it an instance member.</Issue>
            </Message>
            <Message Id="V" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning">On method 'Comparers.CombinedComparer&lt;T&gt;.FromOne&lt;V&gt;(IComparer&lt;V&gt;)', consider providing a more meaningful name than generic type parameter name 'V'.</Issue>
            </Message>
            <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameter" Certainty="95" Level="Error">On method 'Comparers.CombinedComparer&lt;T&gt;.FromOne&lt;V&gt;(IComparer&lt;V&gt;)', prefix generic type parameter name 'V' with 'T'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Remove`1()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="GenericMethodsShouldProvideTypeParameter" Category="Microsoft.Design" CheckId="CA1004" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning">Consider a design where 'Comparers.CombinedComparer&lt;T&gt;.Remove&lt;V&gt;()' doesn't require explicit type parameter 'V' in any call to it.</Issue>
            </Message>
            <Message Id="V" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning">On method 'Comparers.CombinedComparer&lt;T&gt;.Remove&lt;V&gt;()', consider providing a more meaningful name than generic type parameter name 'V'.</Issue>
            </Message>
            <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameter" Certainty="95" Level="Error">On method 'Comparers.CombinedComparer&lt;T&gt;.Remove&lt;V&gt;()', prefix generic type parameter name 'V' with 'T'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Comparers+ComparerComparer`1" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'Comparers.ComparerComparer&lt;T&gt;'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="Comparers+FilteredStringComparer" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'Comparers.FilteredStringComparer'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="Comparers+FilteredVesselComparer" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'Comparers.FilteredVesselComparer'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Compare(Vessel,Vessel)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\Users\jbb\github\HaystackContinued\HaystackContinued" File="Comparers.cs" Line="216">In externally visible method 'Comparers.FilteredVesselComparer.Compare(Vessel, Vessel)', validate parameter 'x' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\Users\jbb\github\HaystackContinued\HaystackContinued" File="Comparers.cs" Line="216">In externally visible method 'Comparers.FilteredVesselComparer.Compare(Vessel, Vessel)', validate parameter 'y' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Comparers+IDecoratorComparer`1" Kind="Interface" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'Comparers.IDecoratorComparer&lt;T&gt;'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Decoratee" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Decoratee" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Decoratee' in member name 'Comparers.IDecoratorComparer&lt;T&gt;.Decoratee' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Comparers+IPriorityComparer`1" Kind="Interface" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'Comparers.IPriorityComparer&lt;T&gt;'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="Comparers+PriorityDecoratorComparer`1" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'Comparers.PriorityDecoratorComparer&lt;T&gt;'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Decorate`1(System.Collections.Generic.IComparer`1&lt;!!0&gt;,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Remove 'Comparers.PriorityDecoratorComparer&lt;T&gt;.Decorate&lt;V&gt;(IComparer&lt;V&gt;, int)' from 'Comparers.PriorityDecoratorComparer&lt;T&gt;' or make it an instance member.</Issue>
            </Message>
            <Message Id="V" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning">On method 'Comparers.PriorityDecoratorComparer&lt;T&gt;.Decorate&lt;V&gt;(IComparer&lt;V&gt;, int)', consider providing a more meaningful name than generic type parameter name 'V'.</Issue>
            </Message>
            <Message Id="priorty" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'Comparers.PriorityDecoratorComparer&lt;T&gt;.Decorate&lt;V&gt;(IComparer&lt;V&gt;, int)', correct the spelling of 'priorty' in parameter name 'priorty' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
             <Issue Name="MethodTypeParameter" Certainty="95" Level="Error">On method 'Comparers.PriorityDecoratorComparer&lt;T&gt;.Decorate&lt;V&gt;(IComparer&lt;V&gt;, int)', prefix generic type parameter name 'V' with 'T'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Comparers+ReverseComparer`1" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'Comparers.ReverseComparer&lt;T&gt;'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="Comparers+VesselLoadedComparer" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'Comparers.VesselLoadedComparer'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="Comparers+VesselMissionTimeComparer" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'Comparers.VesselMissionTimeComparer'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="Comparers+VesselNameComparer" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'Comparers.VesselNameComparer'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Compare(Vessel,Vessel)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\Users\jbb\github\HaystackContinued\HaystackContinued" File="Comparers.cs" Line="229">In externally visible method 'Comparers.VesselNameComparer.Compare(Vessel, Vessel)', validate parameter 'x' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\Users\jbb\github\HaystackContinued\HaystackContinued" File="Comparers.cs" Line="229">In externally visible method 'Comparers.VesselNameComparer.Compare(Vessel, Vessel)', validate parameter 'y' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Comparers+VesselNearbyComparer" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'Comparers.VesselNearbyComparer'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Compare(Vessel,Vessel)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning">In externally visible method 'Comparers.VesselNearbyComparer.Compare(Vessel, Vessel)', validate parameter 'x' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning">In externally visible method 'Comparers.VesselNearbyComparer.Compare(Vessel, Vessel)', validate parameter 'y' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Converters" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Distance(System.Double)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="ParameterNamesShouldNotMatchMemberNames" Category="Microsoft.Naming" CheckId="CA1719" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change either member or parameter name 'distance' so that one differs from the other.</Issue>
            </Message>
            <Message Id="System.Double.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error">Because the behavior of 'double.ToString(string)' could vary based on the current user's locale settings, replace this call in 'Converters.Distance(double)' with a call to 'double.ToString(string, IFormatProvider)'. If the result of 'double.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Duration(System.Double,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error">Replace method 'Converters.Duration(double, int)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="Sigd" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'Converters.Duration(double, int)', correct the spelling of 'Sigd' in parameter name 'secondSigd' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="System.Double.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error">Because the behavior of 'double.ToString(string)' could vary based on the current user's locale settings, replace this call in 'Converters.Duration(double, int)' with a call to 'double.ToString(string, IFormatProvider)'. If the result of 'double.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Int32.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error">Because the behavior of 'int.ToString(string)' could vary based on the current user's locale settings, replace this call in 'Converters.Duration(double, int)' with a call to 'int.ToString(string, IFormatProvider)'. If the result of 'int.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'Converters.Duration(double, int)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'Converters.Duration(double, int)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'Converters.Duration(double, int)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'Converters.Duration(double, int)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'Converters.Duration(double, int)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Extensions" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ClampTo(UnityEngine.Rect,UnityEngine.Rect)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1#" TypeName="ParameterNamesShouldNotMatchMemberNames" Category="Microsoft.Naming" CheckId="CA1719" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change either member or parameter name 'clampTo' so that one differs from the other.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ClampToPosIn(UnityEngine.Rect,UnityEngine.Rect)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Pos" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Pos' in member name 'Extensions.ClampToPosIn(this Rect, Rect)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsEmpty`1(System.Collections.Generic.List`1&lt;!!0&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;T&gt;' in 'Extensions.IsEmpty&lt;T&gt;(this List&lt;T&gt;)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\Users\jbb\github\HaystackContinued\HaystackContinued" File="HSUtils.cs" Line="374">In externally visible method 'Extensions.IsEmpty&lt;T&gt;(this List&lt;T&gt;)', validate parameter 'list' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SafeName(Vessel)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ConsiderPassingBaseTypesAsParameters" Category="Microsoft.Design" CheckId="CA1011" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Error">Consider changing the type of parameter 'vessel' in 'Extensions.SafeName(this Vessel)' from 'Vessel' to its base type 'Object'. This method appears to only require base class members in its implementation. Suppress this violation if there is a compelling reason to require the more derived type in the method signature.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToColor(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="UnityEngine.ColorUtility.TryParseHtmlString(System.String,UnityEngine.Color@)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
             <Issue Name="TryParse" Certainty="95" Level="Warning">'Extensions.ToColor(this string)' calls 'ColorUtility.TryParseHtmlString(string, out Color)' but does not explicitly check whether the conversion succeeded. Either use the return value in a conditional statement or verify that the call site expects that the out argument will be set to the default value when the conversion fails.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToDouble(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Double.TryParse(System.String,System.Double@)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
             <Issue Name="TryParse" Certainty="95" Level="Warning">'Extensions.ToDouble(this string)' calls 'double.TryParse(string, out double)' but does not explicitly check whether the conversion succeeded. Either use the return value in a conditional statement or verify that the call site expects that the out argument will be set to the default value when the conversion fails.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="HaystackContinued" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="TypesThatOwnDisposableFieldsShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1001" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="DependsOnFix">
           <Issue Name="DependsOnFix" Certainty="95" Level="CriticalError">Implement IDisposable on 'HaystackContinued' because it creates members of the following IDisposable types: 'HaystackContinued.ExpandedVesselInfo'. If 'HaystackContinued' has previously shipped, adding new members that implement IDisposable to this type is considered a breaking change to existing consumers.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#drawGUI()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="ClickThroughFix.ClickThruBlocker.GUILayoutWindow(System.Int32,UnityEngine.Rect,UnityEngine.GUI+WindowFunction,System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\Users\jbb\github\HaystackContinued\HaystackContinued" File="HaystackContinued.cs" Line="294">Method 'HaystackContinued.drawGUI()' passes a literal string as parameter 'text' of a call to 'ClickThruBlocker.GUILayoutWindow(int, Rect, GUI.WindowFunction, string, GUIStyle, params GUILayoutOption[])'. Retrieve the following string(s) from a resource table instead: "Haystack ReContinued ".</Issue>
            </Message>
            <Message Id="ReContinued" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\Users\jbb\github\HaystackContinued\HaystackContinued" File="HaystackContinued.cs" Line="294">Correct the spelling of the unrecognized token 'ReContinued' in the literal '"Haystack ReContinued "'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'HaystackContinued.drawGUI()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#fetch" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'HaystackContinued.fetch' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#HiddenVessels" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning">The 'this' parameter (or 'Me' in Visual Basic) of 'HaystackContinued.HiddenVessels' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsGuiDisplay" Kind="Property" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="Gui" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Gui' in member name 'HaystackContinued.IsGuiDisplay' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#mainWindowConstructor(System.Int32)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="UnityEngine.GUILayout.Button(System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\Users\jbb\github\HaystackContinued\HaystackContinued" File="HaystackContinued.cs" Line="389">Method 'HaystackContinued.mainWindowConstructor(int)' passes a literal string as parameter 'text' of a call to 'GUILayout.Button(string, GUIStyle, params GUILayoutOption[])'. Retrieve the following string(s) from a resource table instead: "x".</Issue>
            </Message>
            <Message Id="UnityEngine.GUILayout.Label(System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\Users\jbb\github\HaystackContinued\HaystackContinued" File="HaystackContinued.cs" Line="385">Method 'HaystackContinued.mainWindowConstructor(int)' passes a literal string as parameter 'text' of a call to 'GUILayout.Label(string, GUIStyle, params GUILayoutOption[])'. Retrieve the following string(s) from a resource table instead: "Search:".</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'HaystackContinued.mainWindowConstructor(int)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning">Replace the call to 'string.operator !=(string, string)' in 'HaystackContinued.mainWindowConstructor(int)' with a call to 'String.IsNullOrEmpty'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#markVesselHidden(Vessel,System.Boolean)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning">The 'this' parameter (or 'Me' in Visual Basic) of 'HaystackContinued.markVesselHidden(Vessel, bool)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnDestory()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Destory" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Destory' in member name 'HaystackContinued.OnDestory()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnGUI()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="GUI" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'GUI' in member name 'HaystackContinued.OnGUI()' by changing it to 'Gui'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="HaystackContinued+BottomButtons" Kind="Class" Accessibility="Private" ExternallyVisible="False">
         <Members>
          <Member Name="#.cctor()" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="UnityEngine.GUIContent.#ctor(System.String,System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\Users\jbb\github\HaystackContinued\HaystackContinued" File="HaystackContinued.cs" Line="1205">Method 'HaystackContinued.BottomButtons.BottomButtons()' passes a literal string as parameter 'text' of a call to 'GUIContent.GUIContent(string, string)'. Retrieve the following string(s) from a resource table instead: "NB".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GUISetup(HaystackReContinued.HaystackContinued+GroupedScrollerView,HaystackReContinued.HaystackContinued+DefaultScrollerView)" Kind="Method" Static="False" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message Id="defaultScrollerView" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Error">'defaultScrollerView', a parameter declared in 'HaystackContinued.BottomButtons.GUISetup(HaystackContinued.GroupedScrollerView, HaystackContinued.DefaultScrollerView)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
            <Message Id="groupedScrollerView" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Error">'groupedScrollerView', a parameter declared in 'HaystackContinued.BottomButtons.GUISetup(HaystackContinued.GroupedScrollerView, HaystackContinued.DefaultScrollerView)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="HaystackContinued+CloseHandle" Kind="Class" Accessibility="Private" ExternallyVisible="False">
         <Members>
          <Member Name="#Draw(UnityEngine.Rect&amp;)" Kind="Method" Static="False" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message Id="UnityEngine.GUI.Box(UnityEngine.Rect,System.String,UnityEngine.GUIStyle)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\Users\jbb\github\HaystackContinued\HaystackContinued" File="HaystackContinued.cs" Line="1106">Method 'HaystackContinued.CloseHandle.Draw(ref Rect)' passes a literal string as parameter 'text' of a call to 'GUI.Box(Rect, string, GUIStyle)'. Retrieve the following string(s) from a resource table instead: "X".</Issue>
            </Message>
            <Message Id="winRect" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning">Parameter 'winRect' of 'HaystackContinued.CloseHandle.Draw(ref Rect)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="HaystackContinued+DefaultScrollerView" Kind="Class" Accessibility="Private" ExternallyVisible="False">
         <Members>
          <Member Name="#Draw()" Kind="Method" Static="False" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message Id="UnityEngine.GUILayout.Label(System.String,UnityEngine.GUILayoutOption[])" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\Users\jbb\github\HaystackContinued\HaystackContinued" File="HaystackContinued.cs" Line="936">Method 'HaystackContinued.DefaultScrollerView.Draw()' passes a literal string as parameter 'text' of a call to 'GUILayout.Label(string, params GUILayoutOption[])'. Retrieve the following string(s) from a resource table instead: "No match found".</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="HaystackContinued+DockingPortListView" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#.cctor()" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="HaystackReContinued.HSUtils.Log(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\Users\jbb\github\HaystackContinued\HaystackContinued" File="HaystackContinued.cs" Line="1668">Method 'HaystackContinued.DockingPortListView.DockingPortListView()' passes a literal string as parameter 'message' of a call to 'HSUtils.Log(string)'. Retrieve the following string(s) from a resource table instead: "Docking Port Alignment Indicator mod detected: using named docking node support....".</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError">Modify 'HaystackContinued.DockingPortListView.DockingPortListView()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message TypeName="InitializeReferenceTypeStaticFieldsInline" Category="Microsoft.Performance" CheckId="CA1810" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="CriticalWarning">Initialize all static fields in 'HaystackContinued.DockingPortListView' when those fields are declared and remove the explicit static constructor.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Draw(Vessel)" Kind="Method" Static="False" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message Id="UnityEngine.GUILayout.Label(System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\Users\jbb\github\HaystackContinued\HaystackContinued" File="HaystackContinued.cs" Line="1815">Method 'HaystackContinued.DockingPortListView.Draw(Vessel)' passes a literal string as parameter 'text' of a call to 'GUILayout.Label(string, GUIStyle, params GUILayoutOption[])'. Retrieve the following string(s) from a resource table instead: "Docking Ports".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\Users\jbb\github\HaystackContinued\HaystackContinued" File="HaystackContinued.cs" Line="1799">Method 'HaystackContinued.DockingPortListView.Draw(Vessel)' passes a literal string as parameter 'text' of a call to 'GUILayout.Label(string, GUIStyle, params GUILayoutOption[])'. Retrieve the following string(s) from a resource table instead: "The vessel is out of range: cannot list docking ports".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\Users\jbb\github\HaystackContinued\HaystackContinued" File="HaystackContinued.cs" Line="1808">Method 'HaystackContinued.DockingPortListView.Draw(Vessel)' passes a literal string as parameter 'text' of a call to 'GUILayout.Label(string, GUIStyle, params GUILayoutOption[])'. Retrieve the following string(s) from a resource table instead: "This vessel does not have any docking ports".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#getDistanceText(ModuleDockingNode)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning">The 'this' parameter (or 'Me' in Visual Basic) of 'HaystackContinued.DockingPortListView.getDistanceText(ModuleDockingNode)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'HaystackContinued.DockingPortListView.getDistanceText(ModuleDockingNode)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#getPortName(ModuleDockingNode)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning">The 'this' parameter (or 'Me' in Visual Basic) of 'HaystackContinued.DockingPortListView.getPortName(ModuleDockingNode)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#populatePortList()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.CompareTo(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error">Because the behavior of 'string.CompareTo(string)' could vary based on the current user's locale settings, replace this call in 'HaystackContinued.DockingPortListView.populatePortList()' with a call to 'string.Compare(string, string, StringComparison)'. If the result of 'string.Compare(string, string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#setDockingPortTarget(ModuleDockingNode)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning">The 'this' parameter (or 'Me' in Visual Basic) of 'HaystackContinued.DockingPortListView.setDockingPortTarget(ModuleDockingNode)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="HaystackContinued+ExpandedVesselInfo" Kind="Class" Accessibility="Private" ExternallyVisible="False">
         <Members>
          <Member Name="#.ctor(HaystackReContinued.HaystackContinued,HaystackReContinued.HaystackContinued+BottomButtons,HaystackReContinued.HaystackContinued+DefaultScrollerView,HaystackReContinued.HaystackContinued+GroupedScrollerView)" Kind="Method" Static="False" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message Id="UnityEngine.GUIContent.#ctor(System.String,System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\Users\jbb\github\HaystackContinued\HaystackContinued" File="HaystackContinued.cs" Line="1891">Method 'HaystackContinued.ExpandedVesselInfo.ExpandedVesselInfo(HaystackContinued, HaystackContinued.BottomButtons, HaystackContinued.DefaultScrollerView, HaystackContinued.GroupedScrollerView)' passes a literal string as parameter 'text' of a call to 'GUIContent.GUIContent(string, string)'. Retrieve the following string(s) from a resource table instead: "R".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#drawCrew()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="UnityEngine.GUILayout.Label(System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\Users\jbb\github\HaystackContinued\HaystackContinued" File="HaystackContinued.cs" Line="2422">Method 'HaystackContinued.ExpandedVesselInfo.drawCrew()' passes a literal string as parameter 'text' of a call to 'GUILayout.Label(string, GUIStyle, params GUILayoutOption[])'. Retrieve the following string(s) from a resource table instead: "Crew (,  / , ):".</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'HaystackContinued.ExpandedVesselInfo.drawCrew()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#drawExpanded(System.Int32)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="UnityEngine.GUILayout.Label(System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\Users\jbb\github\HaystackContinued\HaystackContinued" File="HaystackContinued.cs" Line="2263">Method 'HaystackContinued.ExpandedVesselInfo.drawExpanded(int)' passes a literal string as parameter 'text' of a call to 'GUILayout.Label(string, GUIStyle, params GUILayoutOption[])'. Retrieve the following string(s) from a resource table instead: "Nothing is selected".</Issue>
            </Message>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning">Replace the call to 'string.operator !=(string, string)' in 'HaystackContinued.ExpandedVesselInfo.drawExpanded(int)' with a call to 'String.IsNullOrEmpty'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DrawExpandedWindow()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message Id="ClickThroughFix.ClickThruBlocker.GUILayoutWindow(System.Int32,UnityEngine.Rect,UnityEngine.GUI+WindowFunction,System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\Users\jbb\github\HaystackContinued\HaystackContinued" File="HaystackContinued.cs" Line="2243">Method 'HaystackContinued.ExpandedVesselInfo.DrawExpandedWindow()' passes a literal string as parameter 'text' of a call to 'ClickThruBlocker.GUILayoutWindow(int, Rect, GUI.WindowFunction, string, GUIStyle, params GUILayoutOption[])'. Retrieve the following string(s) from a resource table instead: "Vessel Infomation".</Issue>
            </Message>
            <Message Id="Infomation" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\Users\jbb\github\HaystackContinued\HaystackContinued" File="HaystackContinued.cs" Line="2243">Correct the spelling of the unrecognized token 'Infomation' in the literal '"Vessel Infomation"'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#drawItemList(System.String,System.Collections.Generic.IEnumerable`1&lt;HaystackReContinued.HaystackContinued+ExpandedVesselInfo+DisplayItem&gt;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="UnityEngine.GUILayout.Label(System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\Users\jbb\github\HaystackContinued\HaystackContinued" File="HaystackContinued.cs" Line="2454">Method 'HaystackContinued.ExpandedVesselInfo.drawItemList(string, IEnumerable&lt;HaystackContinued.ExpandedVesselInfo.DisplayItem&gt;)' passes a literal string as parameter 'text' of a call to 'GUILayout.Label(string, GUIStyle, params GUILayoutOption[])'. Retrieve the following string(s) from a resource table instead: " ".</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning">The 'this' parameter (or 'Me' in Visual Basic) of 'HaystackContinued.ExpandedVesselInfo.drawItemList(string, IEnumerable&lt;HaystackContinued.ExpandedVesselInfo.DisplayItem&gt;)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'HaystackContinued.ExpandedVesselInfo.drawItemList(string, IEnumerable&lt;HaystackContinued.ExpandedVesselInfo.DisplayItem&gt;)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#drawOrbit(HaystackReContinued.HaystackContinued+ExpandedVesselInfo+OrbitData)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="UnityEngine.GUILayout.Label(System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\Users\jbb\github\HaystackContinued\HaystackContinued" File="HaystackContinued.cs" Line="2400">Method 'HaystackContinued.ExpandedVesselInfo.drawOrbit(HaystackContinued.ExpandedVesselInfo.OrbitData)' passes a literal string as parameter 'text' of a call to 'GUILayout.Label(string, GUIStyle, params GUILayoutOption[])'. Retrieve the following string(s) from a resource table instead: "Apoapsis: ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\Users\jbb\github\HaystackContinued\HaystackContinued" File="HaystackContinued.cs" Line="2405">Method 'HaystackContinued.ExpandedVesselInfo.drawOrbit(HaystackContinued.ExpandedVesselInfo.OrbitData)' passes a literal string as parameter 'text' of a call to 'GUILayout.Label(string, GUIStyle, params GUILayoutOption[])'. Retrieve the following string(s) from a resource table instead: "Inclination: ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\Users\jbb\github\HaystackContinued\HaystackContinued" File="HaystackContinued.cs" Line="2398">Method 'HaystackContinued.ExpandedVesselInfo.drawOrbit(HaystackContinued.ExpandedVesselInfo.OrbitData)' passes a literal string as parameter 'text' of a call to 'GUILayout.Label(string, GUIStyle, params GUILayoutOption[])'. Retrieve the following string(s) from a resource table instead: "Orbial information:".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\Users\jbb\github\HaystackContinued\HaystackContinued" File="HaystackContinued.cs" Line="2404">Method 'HaystackContinued.ExpandedVesselInfo.drawOrbit(HaystackContinued.ExpandedVesselInfo.OrbitData)' passes a literal string as parameter 'text' of a call to 'GUILayout.Label(string, GUIStyle, params GUILayoutOption[])'. Retrieve the following string(s) from a resource table instead: "Orbital Period: ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\Users\jbb\github\HaystackContinued\HaystackContinued" File="HaystackContinued.cs" Line="2401">Method 'HaystackContinued.ExpandedVesselInfo.drawOrbit(HaystackContinued.ExpandedVesselInfo.OrbitData)' passes a literal string as parameter 'text' of a call to 'GUILayout.Label(string, GUIStyle, params GUILayoutOption[])'. Retrieve the following string(s) from a resource table instead: "Periapsis: ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\Users\jbb\github\HaystackContinued\HaystackContinued" File="HaystackContinued.cs" Line="2409">Method 'HaystackContinued.ExpandedVesselInfo.drawOrbit(HaystackContinued.ExpandedVesselInfo.OrbitData)' passes a literal string as parameter 'text' of a call to 'GUILayout.Label(string, GUIStyle, params GUILayoutOption[])'. Retrieve the following string(s) from a resource table instead: "SOI Change Date: ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\Users\jbb\github\HaystackContinued\HaystackContinued" File="HaystackContinued.cs" Line="2408">Method 'HaystackContinued.ExpandedVesselInfo.drawOrbit(HaystackContinued.ExpandedVesselInfo.OrbitData)' passes a literal string as parameter 'text' of a call to 'GUILayout.Label(string, GUIStyle, params GUILayoutOption[])'. Retrieve the following string(s) from a resource table instead: "SOI Change Time: ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\Users\jbb\github\HaystackContinued\HaystackContinued" File="HaystackContinued.cs" Line="2399">Method 'HaystackContinued.ExpandedVesselInfo.drawOrbit(HaystackContinued.ExpandedVesselInfo.OrbitData)' passes a literal string as parameter 'text' of a call to 'GUILayout.Label(string, GUIStyle, params GUILayoutOption[])'. Retrieve the following string(s) from a resource table instead: "SOI: ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\Users\jbb\github\HaystackContinued\HaystackContinued" File="HaystackContinued.cs" Line="2402">Method 'HaystackContinued.ExpandedVesselInfo.drawOrbit(HaystackContinued.ExpandedVesselInfo.OrbitData)' passes a literal string as parameter 'text' of a call to 'GUILayout.Label(string, GUIStyle, params GUILayoutOption[])'. Retrieve the following string(s) from a resource table instead: "Time to AP: ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\Users\jbb\github\HaystackContinued\HaystackContinued" File="HaystackContinued.cs" Line="2403">Method 'HaystackContinued.ExpandedVesselInfo.drawOrbit(HaystackContinued.ExpandedVesselInfo.OrbitData)' passes a literal string as parameter 'text' of a call to 'GUILayout.Label(string, GUIStyle, params GUILayoutOption[])'. Retrieve the following string(s) from a resource table instead: "Time to PE: ".</Issue>
            </Message>
            <Message Id="Apoapsis" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\Users\jbb\github\HaystackContinued\HaystackContinued" File="HaystackContinued.cs" Line="2400">Correct the spelling of the unrecognized token 'Apoapsis' in the literal '"Apoapsis: "'.</Issue>
            </Message>
            <Message Id="Orbial" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\Users\jbb\github\HaystackContinued\HaystackContinued" File="HaystackContinued.cs" Line="2398">Correct the spelling of the unrecognized token 'Orbial' in the literal '"Orbial information:"'.</Issue>
            </Message>
            <Message Id="Periapsis" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\Users\jbb\github\HaystackContinued\HaystackContinued" File="HaystackContinued.cs" Line="2401">Correct the spelling of the unrecognized token 'Periapsis' in the literal '"Periapsis: "'.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning">The 'this' parameter (or 'Me' in Visual Basic) of 'HaystackContinued.ExpandedVesselInfo.drawOrbit(HaystackContinued.ExpandedVesselInfo.OrbitData)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#drawResources()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="UnityEngine.GUILayout.Label(System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\Users\jbb\github\HaystackContinued\HaystackContinued" File="HaystackContinued.cs" Line="2439">Method 'HaystackContinued.ExpandedVesselInfo.drawResources()' passes a literal string as parameter 'text' of a call to 'GUILayout.Label(string, GUIStyle, params GUILayoutOption[])'. Retrieve the following string(s) from a resource table instead: "Resources:".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#drawVessel()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="UnityEngine.GUILayout.Label(System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\Users\jbb\github\HaystackContinued\HaystackContinued" File="HaystackContinued.cs" Line="2387">Method 'HaystackContinued.ExpandedVesselInfo.drawVessel()' passes a literal string as parameter 'text' of a call to 'GUILayout.Label(string, GUIStyle, params GUILayoutOption[])'. Retrieve the following string(s) from a resource table instead: "MET: ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\Users\jbb\github\HaystackContinued\HaystackContinued" File="HaystackContinued.cs" Line="2392">Method 'HaystackContinued.ExpandedVesselInfo.drawVessel()' passes a literal string as parameter 'text' of a call to 'GUILayout.Label(string, GUIStyle, params GUILayoutOption[])'. Retrieve the following string(s) from a resource table instead: "Maneuver Node @: ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\Users\jbb\github\HaystackContinued\HaystackContinued" File="HaystackContinued.cs" Line="2391">Method 'HaystackContinued.ExpandedVesselInfo.drawVessel()' passes a literal string as parameter 'text' of a call to 'GUILayout.Label(string, GUIStyle, params GUILayoutOption[])'. Retrieve the following string(s) from a resource table instead: "Maneuver Node in: ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\Users\jbb\github\HaystackContinued\HaystackContinued" File="HaystackContinued.cs" Line="2375">Method 'HaystackContinued.ExpandedVesselInfo.drawVessel()' passes a literal string as parameter 'text' of a call to 'GUILayout.Label(string, GUIStyle, params GUILayoutOption[])'. Retrieve the following string(s) from a resource table instead: "Parts: ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\Users\jbb\github\HaystackContinued\HaystackContinued" File="HaystackContinued.cs" Line="2385">Method 'HaystackContinued.ExpandedVesselInfo.drawVessel()' passes a literal string as parameter 'text' of a call to 'GUILayout.Label(string, GUIStyle, params GUILayoutOption[])'. Retrieve the following string(s) from a resource table instead: "Status:".</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'HaystackContinued.ExpandedVesselInfo.drawVessel()' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#formatCrewDisplay(System.String,ProtoCrewMember)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning">The 'this' parameter (or 'Me' in Visual Basic) of 'HaystackContinued.ExpandedVesselInfo.formatCrewDisplay(string, ProtoCrewMember)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error">Because the behavior of 'string.Format(string, params object[])' could vary based on the current user's locale settings, replace this call in 'HaystackContinued.ExpandedVesselInfo.formatCrewDisplay(string, ProtoCrewMember)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#getAtmData(CelestialBody)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning">The 'this' parameter (or 'Me' in Visual Basic) of 'HaystackContinued.ExpandedVesselInfo.getAtmData(CelestialBody)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="System.Double.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error">Because the behavior of 'double.ToString(string)' could vary based on the current user's locale settings, replace this call in 'HaystackContinued.ExpandedVesselInfo.getAtmData(CelestialBody)' with a call to 'double.ToString(string, IFormatProvider)'. If the result of 'double.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error">Because the behavior of 'double.ToString(string)' could vary based on the current user's locale settings, replace this call in 'HaystackContinued.ExpandedVesselInfo.getAtmData(CelestialBody)' with a call to 'double.ToString(string, IFormatProvider)'. If the result of 'double.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error">Because the behavior of 'double.ToString(string)' could vary based on the current user's locale settings, replace this call in 'HaystackContinued.ExpandedVesselInfo.getAtmData(CelestialBody)' with a call to 'double.ToString(string, IFormatProvider)'. If the result of 'double.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error">Because the behavior of 'double.ToString(string)' could vary based on the current user's locale settings, replace this call in 'HaystackContinued.ExpandedVesselInfo.getAtmData(CelestialBody)' with a call to 'double.ToString(string, IFormatProvider)'. If the result of 'double.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'HaystackContinued.ExpandedVesselInfo.getAtmData(CelestialBody)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#getPhysicalData(CelestialBody)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning">The 'this' parameter (or 'Me' in Visual Basic) of 'HaystackContinued.ExpandedVesselInfo.getPhysicalData(CelestialBody)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="System.Double.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error">Because the behavior of 'double.ToString(string)' could vary based on the current user's locale settings, replace this call in 'HaystackContinued.ExpandedVesselInfo.getPhysicalData(CelestialBody)' with a call to 'double.ToString(string, IFormatProvider)'. If the result of 'double.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error">Because the behavior of 'double.ToString(string)' could vary based on the current user's locale settings, replace this call in 'HaystackContinued.ExpandedVesselInfo.getPhysicalData(CelestialBody)' with a call to 'double.ToString(string, IFormatProvider)'. If the result of 'double.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error">Because the behavior of 'double.ToString(string)' could vary based on the current user's locale settings, replace this call in 'HaystackContinued.ExpandedVesselInfo.getPhysicalData(CelestialBody)' with a call to 'double.ToString(string, IFormatProvider)'. If the result of 'double.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error">Because the behavior of 'double.ToString(string)' could vary based on the current user's locale settings, replace this call in 'HaystackContinued.ExpandedVesselInfo.getPhysicalData(CelestialBody)' with a call to 'double.ToString(string, IFormatProvider)'. If the result of 'double.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error">Because the behavior of 'double.ToString(string)' could vary based on the current user's locale settings, replace this call in 'HaystackContinued.ExpandedVesselInfo.getPhysicalData(CelestialBody)' with a call to 'double.ToString(string, IFormatProvider)'. If the result of 'double.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error">Because the behavior of 'double.ToString(string)' could vary based on the current user's locale settings, replace this call in 'HaystackContinued.ExpandedVesselInfo.getPhysicalData(CelestialBody)' with a call to 'double.ToString(string, IFormatProvider)'. If the result of 'double.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error">Because the behavior of 'double.ToString(string)' could vary based on the current user's locale settings, replace this call in 'HaystackContinued.ExpandedVesselInfo.getPhysicalData(CelestialBody)' with a call to 'double.ToString(string, IFormatProvider)'. If the result of 'double.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#getSatellites(CelestialBody)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning">The 'this' parameter (or 'Me' in Visual Basic) of 'HaystackContinued.ExpandedVesselInfo.getSatellites(CelestialBody)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#getSciData(CelestialBody)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning">The 'this' parameter (or 'Me' in Visual Basic) of 'HaystackContinued.ExpandedVesselInfo.getSciData(CelestialBody)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="System.Single.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error">Because the behavior of 'float.ToString(string)' could vary based on the current user's locale settings, replace this call in 'HaystackContinued.ExpandedVesselInfo.getSciData(CelestialBody)' with a call to 'float.ToString(string, IFormatProvider)'. If the result of 'float.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error">Because the behavior of 'float.ToString(string)' could vary based on the current user's locale settings, replace this call in 'HaystackContinued.ExpandedVesselInfo.getSciData(CelestialBody)' with a call to 'float.ToString(string, IFormatProvider)'. If the result of 'float.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#updateVesselResourceData(Vessel)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning">'HaystackContinued.ExpandedVesselInfo.updateVesselResourceData(Vessel)' has a cyclomatic complexity of 38. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning">The 'this' parameter (or 'Me' in Visual Basic) of 'HaystackContinued.ExpandedVesselInfo.updateVesselResourceData(Vessel)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="System.Double.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error">Because the behavior of 'double.ToString(string)' could vary based on the current user's locale settings, replace this call in 'HaystackContinued.ExpandedVesselInfo.updateVesselResourceData(Vessel)' with a call to 'double.ToString(string, IFormatProvider)'. If the result of 'double.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error">Because the behavior of 'double.ToString(string)' could vary based on the current user's locale settings, replace this call in 'HaystackContinued.ExpandedVesselInfo.updateVesselResourceData(Vessel)' with a call to 'double.ToString(string, IFormatProvider)'. If the result of 'double.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error">Because the behavior of 'double.ToString(string)' could vary based on the current user's locale settings, replace this call in 'HaystackContinued.ExpandedVesselInfo.updateVesselResourceData(Vessel)' with a call to 'double.ToString(string, IFormatProvider)'. If the result of 'double.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error">Because the behavior of 'double.ToString(string)' could vary based on the current user's locale settings, replace this call in 'HaystackContinued.ExpandedVesselInfo.updateVesselResourceData(Vessel)' with a call to 'double.ToString(string, IFormatProvider)'. If the result of 'double.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error">Because the behavior of 'double.ToString(string)' could vary based on the current user's locale settings, replace this call in 'HaystackContinued.ExpandedVesselInfo.updateVesselResourceData(Vessel)' with a call to 'double.ToString(string, IFormatProvider)'. If the result of 'double.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error">Because the behavior of 'double.ToString(string)' could vary based on the current user's locale settings, replace this call in 'HaystackContinued.ExpandedVesselInfo.updateVesselResourceData(Vessel)' with a call to 'double.ToString(string, IFormatProvider)'. If the result of 'double.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error">Because the behavior of 'string.Format(string, params object[])' could vary based on the current user's locale settings, replace this call in 'HaystackContinued.ExpandedVesselInfo.updateVesselResourceData(Vessel)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error">Because the behavior of 'string.Format(string, params object[])' could vary based on the current user's locale settings, replace this call in 'HaystackContinued.ExpandedVesselInfo.updateVesselResourceData(Vessel)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="HaystackContinued+ExpandedVesselInfo+OrbitData" Kind="Class" Accessibility="Private" ExternallyVisible="False">
         <Members>
          <Member Name="#FromOrbit(Orbit)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Double.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error">Because the behavior of 'double.ToString(string)' could vary based on the current user's locale settings, replace this call in 'HaystackContinued.ExpandedVesselInfo.OrbitData.FromOrbit(Orbit)' with a call to 'double.ToString(string, IFormatProvider)'. If the result of 'double.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="HaystackContinued+GroupedScrollerView" Kind="Class" Accessibility="Private" ExternallyVisible="False">
         <Members>
          <Member Name="#Draw()" Kind="Method" Static="False" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message Id="UnityEngine.GUILayout.Label(System.String,UnityEngine.GUILayoutOption[])" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\Users\jbb\github\HaystackContinued\HaystackContinued" File="HaystackContinued.cs" Line="755">Method 'HaystackContinued.GroupedScrollerView.Draw()' passes a literal string as parameter 'text' of a call to 'GUILayout.Label(string, params GUILayoutOption[])'. Retrieve the following string(s) from a resource table instead: "No matched vessels found".</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="HaystackContinued+ResizeHandle" Kind="Class" Accessibility="Private" ExternallyVisible="False">
         <Members>
          <Member Name="#Draw(UnityEngine.Rect&amp;)" Kind="Method" Static="False" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message Id="UnityEngine.GUI.Box(UnityEngine.Rect,System.String,UnityEngine.GUIStyle)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\Users\jbb\github\HaystackContinued\HaystackContinued" File="HaystackContinued.cs" Line="1132">Method 'HaystackContinued.ResizeHandle.Draw(ref Rect)' passes a literal string as parameter 'text' of a call to 'GUI.Box(Rect, string, GUIStyle)'. Retrieve the following string(s) from a resource table instead: "//".</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="HaystackContinued+VesselInfoView" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#Draw(Vessel,System.Boolean,Vessel)" Kind="Method" Static="False" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message Id="HaystackReContinued.HSUtils.Log(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\Users\jbb\github\HaystackContinued\HaystackContinued" File="HaystackContinued.cs" Line="1539">Method 'HaystackContinued.VesselInfoView.Draw(Vessel, bool, Vessel)' passes a literal string as parameter 'message' of a call to 'HSUtils.Log(string)'. Retrieve the following string(s) from a resource table instead: "HaystackContinued, SelectedVessel set to : ".</Issue>
            </Message>
            <Message Id="HaystackContinued" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\Users\jbb\github\HaystackContinued\HaystackContinued" File="HaystackContinued.cs" Line="1539">Correct the spelling of the unrecognized token 'HaystackContinued' in the literal '"HaystackContinued, SelectedVessel set to : "'.</Issue>
            </Message>
            <Message Id="SelectedVessel" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\Users\jbb\github\HaystackContinued\HaystackContinued" File="HaystackContinued.cs" Line="1539">Correct the spelling of the unrecognized token 'SelectedVessel' in the literal '"HaystackContinued, SelectedVessel set to : "'.</Issue>
            </Message>
            <Message Id="selected" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Error">'selected', a parameter declared in 'HaystackContinued.VesselInfoView.Draw(Vessel, bool, Vessel)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#drawDistance(Vessel,Vessel)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="UnityEngine.GUILayout.Label(System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\Users\jbb\github\HaystackContinued\HaystackContinued" File="HaystackContinued.cs" Line="1555">Method 'HaystackContinued.VesselInfoView.drawDistance(Vessel, Vessel)' passes a literal string as parameter 'text' of a call to 'GUILayout.Label(string, GUIStyle, params GUILayoutOption[])'. Retrieve the following string(s) from a resource table instead: "m".</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning">The 'this' parameter (or 'Me' in Visual Basic) of 'HaystackContinued.VesselInfoView.drawDistance(Vessel, Vessel)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#drawVesselInfoText(Vessel,Vessel)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="UnityEngine.GUILayout.Label(System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\Users\jbb\github\HaystackContinued\HaystackContinued" File="HaystackContinued.cs" Line="1592">Method 'HaystackContinued.VesselInfoView.drawVesselInfoText(Vessel, Vessel)' passes a literal string as parameter 'text' of a call to 'GUILayout.Label(string, GUIStyle, params GUILayoutOption[])'. Retrieve the following string(s) from a resource table instead: ". , . Loaded, . Currently active, . Parts: ".</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error">Because the behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings, replace this call in 'HaystackContinued.VesselInfoView.drawVesselInfoText(Vessel, Vessel)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error">Because the behavior of 'string.Format(string, params object[])' could vary based on the current user's locale settings, replace this call in 'HaystackContinued.VesselInfoView.drawVesselInfoText(Vessel, Vessel)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="HaystackContinued+VesselListController" Kind="Class" Accessibility="Private" ExternallyVisible="False">
         <Members>
          <Member Name="#filterForNearbyOnly(System.Collections.Generic.List`1&lt;Vessel&gt;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning">The 'this' parameter (or 'Me' in Visual Basic) of 'HaystackContinued.VesselListController.filterForNearbyOnly(List&lt;Vessel&gt;)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#removeFilteredVesslesFromList(System.Collections.Generic.List`1&lt;Vessel&gt;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning">The 'this' parameter (or 'Me' in Visual Basic) of 'HaystackContinued.VesselListController.removeFilteredVesslesFromList(List&lt;Vessel&gt;)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="HaystackResourceLoader" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#toolbarButton_OnClick(ToolbarControl_NS.ClickEvent)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="e" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning">Parameter 'e' of 'HaystackResourceLoader.toolbarButton_OnClick(ClickEvent)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DisplayButtonOnClick" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Name="First" Certainty="95" Level="Error">Declare the first parameter of 'HaystackResourceLoader.DisplayButtonClickHandler' as an object named 'sender'.</Issue>
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'HaystackResourceLoader.DisplayButtonClickHandler' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Rename 'HaystackResourceLoader.DisplayButtonClickHandler' to end in 'EventHandler'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="HaystackResourceLoader+DisplayButtonClickHandler" Kind="Delegate" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'HaystackResourceLoader.DisplayButtonClickHandler'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="HiddenVessels" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#Save(ConfigNode)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message Id="HaystackReContinued.HSUtils.Log(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\Users\jbb\github\HaystackContinued\HaystackContinued" File="DataManager.cs" Line="126">Method 'HiddenVessels.Save(ConfigNode)' passes a literal string as parameter 'message' of a call to 'HSUtils.Log(string)'. Retrieve the following string(s) from a resource table instead: "HiddenVessles#Save: exception: ".</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError">Modify 'HiddenVessels.Save(ConfigNode)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="HiddenVessles" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\Users\jbb\github\HaystackContinued\HaystackContinued" File="DataManager.cs" Line="126">Correct the spelling of the unrecognized token 'HiddenVessles' in the literal '"HiddenVessles#Save: exception: "'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="HS" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#useAltSkin" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HS.useAltSkin' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="HSUtils" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#DebugLog(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'HSUtils.DebugLog(string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DebugLog(System.String,System.Object[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error">Because the behavior of 'string.Format(string, params object[])' could vary based on the current user's locale settings, replace this call in 'HSUtils.DebugLog(string, params object[])' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Log(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'HSUtils.Log(string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Log(System.String,System.Object[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">'HSUtils.Log(string, params object[])' appears to have no upstream public or protected callers.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error">Because the behavior of 'string.Format(string, params object[])' could vary based on the current user's locale settings, replace this call in 'HSUtils.Log(string, params object[])' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SwitchAndFly(Vessel)" Kind="Method" Static="True" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message Id="ScreenMessages.PostScreenMessage(System.String,System.Single,ScreenMessageStyle)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\Users\jbb\github\HaystackContinued\HaystackContinued" File="HSUtils.cs" Line="78">Method 'HSUtils.SwitchAndFly(Vessel)' passes a literal string as parameter 'message' of a call to 'ScreenMessages.PostScreenMessage(string, float, ScreenMessageStyle)'. Retrieve the following string(s) from a resource table instead: "Cannot switch to , a vessel, an object,  we do not own.".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToSI(System.Double,System.Int32,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Double.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error">Because the behavior of 'double.ToString()' could vary based on the current user's locale settings, replace this call in 'HSUtils.ToSI(double, int, int)' with a call to 'double.ToString(IFormatProvider)'. If the result of 'double.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Double.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error">Because the behavior of 'double.ToString(string)' could vary based on the current user's locale settings, replace this call in 'HSUtils.ToSI(double, int, int)' with a call to 'double.ToString(string, IFormatProvider)'. If the result of 'double.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'HSUtils.ToSI(double, int, int)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="HSUtils+SortByName" Kind="Class" Accessibility="Public" ExternallyVisible="False">
         <Messages>
          <Message TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
           <Issue Certainty="75" Level="Warning">'HSUtils.SortByName' is an internal class that is apparently never instantiated. If so, remove the code from the assembly. If this class is intended to contain only static methods, consider adding a private constructor to prevent the compiler from generating a default constructor.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Compare(HaystackReContinued.HSVesselType,HaystackReContinued.HSVesselType)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.CompareTo(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error">Because the behavior of 'string.CompareTo(string)' could vary based on the current user's locale settings, replace this call in 'HSUtils.SortByName.Compare(HSVesselType, HSVesselType)' with a call to 'string.Compare(string, string, StringComparison)'. If the result of 'string.Compare(string, string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\Users\jbb\github\HaystackContinued\HaystackContinued" File="HSUtils.cs" Line="30">In externally visible method 'HSUtils.SortByName.Compare(HSVesselType, HSVesselType)', validate parameter 'a' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\Users\jbb\github\HaystackContinued\HaystackContinued" File="HSUtils.cs" Line="30">In externally visible method 'HSUtils.SortByName.Compare(HSVesselType, HSVesselType)', validate parameter 'b' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="HSUtils+SortByWeight" Kind="Class" Accessibility="Public" ExternallyVisible="False">
         <Members>
          <Member Name="#Compare(HaystackReContinued.HSVesselType,HaystackReContinued.HSVesselType)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\Users\jbb\github\HaystackContinued\HaystackContinued" File="HSUtils.cs" Line="19">In externally visible method 'HSUtils.SortByWeight.Compare(HSVesselType, HSVesselType)', validate parameter 'a' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning">In externally visible method 'HSUtils.SortByWeight.Compare(HSVesselType, HSVesselType)', validate parameter 'b' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="HSVesselType" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#icon" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HSVesselType.icon' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#name" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HSVesselType.name' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#sort" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HSVesselType.sort' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#vesselType" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HSVesselType.vesselType' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#visible" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'HSVesselType.visible' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="InstallChecker" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#CleanupOldVersions()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">'InstallChecker.CleanupOldVersions()' appears to have no upstream public or protected callers.</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError">Modify 'InstallChecker.CleanupOldVersions()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="System.Int32.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error">Because the behavior of 'int.ToString(string)' could vary based on the current user's locale settings, replace this call in 'InstallChecker.CleanupOldVersions()' with a call to 'int.ToString(string, IFormatProvider)'. If the result of 'int.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Single.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error">Because the behavior of 'float.ToString(string)' could vary based on the current user's locale settings, replace this call in 'InstallChecker.CleanupOldVersions()' with a call to 'float.ToString(string, IFormatProvider)'. If the result of 'float.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Start()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">'InstallChecker.Start()' appears to have no upstream public or protected callers.</Issue>
            </Message>
            <Message Id="PopupDialog.SpawnPopupDialog(UnityEngine.Vector2,UnityEngine.Vector2,System.String,System.String,System.String,System.String,System.Boolean,UISkinDef,System.Boolean,System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\Users\jbb\github\HaystackContinued\HaystackContinued" File="InstallChecker.cs" Line="54">Method 'InstallChecker.Start()' passes a literal string as parameter 'message' of a call to 'PopupDialog.SpawnPopupDialog(Vector2, Vector2, string, string, string, string, bool, UISkinDef, bool, string)'. Retrieve the following string(s) from a resource table instead: "Haystack ReContinued has been installed incorrectly and will not function proper...".</Issue>
            </Message>
            <Message Id="GameData" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\Users\jbb\github\HaystackContinued\HaystackContinued" File="InstallChecker.cs" Line="54">Correct the spelling of the unrecognized token 'GameData' in the literal '"Haystack ReContinued has been installed incorrectly and will not function proper..."'.</Issue>
            </Message>
            <Message Id="HaystackContinued" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\Users\jbb\github\HaystackContinued\HaystackContinued" File="InstallChecker.cs" Line="54">Correct the spelling of the unrecognized token 'HaystackContinued' in the literal '"Haystack ReContinued has been installed incorrectly and will not function proper..."'.</Issue>
            </Message>
            <Message Id="ReContinued" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\Users\jbb\github\HaystackContinued\HaystackContinued" File="InstallChecker.cs" Line="54">Correct the spelling of the unrecognized token 'ReContinued' in the literal '"Haystack ReContinued has been installed incorrectly and will not function proper..."'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="NodeSerializers" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#.cctor()" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="InitializeReferenceTypeStaticFieldsInline" Category="Microsoft.Performance" CheckId="CA1810" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="CriticalWarning">Initialize all static fields in 'NodeSerializers' when those fields are declared and remove the explicit static constructor.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FromNode`1(ConfigNode,!!0)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">'NodeSerializers.FromNode&lt;T&gt;(this ConfigNode, T)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="RegisterToolbar" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Toolbar" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
           <Issue Name="TypeShouldBeCompoundWord" Certainty="80" Level="Error">The discrete term 'Toolbar' in type name 'RegisterToolbar' should be expressed as a compound word, 'ToolBar'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Start()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">'RegisterToolbar.Start()' appears to have no upstream public or protected callers.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning">The 'this' parameter (or 'Me' in Visual Basic) of 'RegisterToolbar.Start()' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Resources" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="TypeNamesShouldNotMatchNamespaces" Category="Microsoft.Naming" CheckId="CA1724" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
           <Issue Name="System" Certainty="95" Level="Error">The type name 'Resources' conflicts in whole or in part with the namespace name 'System.Resources' defined in the .NET Framework. Rename the type to eliminate the conflict.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.cctor()" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'Resources.Resources()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'Resources.Resources()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'Resources.Resources()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'Resources.Resources()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'Resources.Resources()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'Resources.Resources()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'Resources.Resources()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'Resources.Resources()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'Resources.Resources()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'Resources.Resources()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'Resources.Resources()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'Resources.Resources()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'Resources.Resources()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'Resources.Resources()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'Resources.Resources()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'Resources.Resources()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'Resources.Resources()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'Resources.Resources()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'Resources.Resources()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'Resources.Resources()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'Resources.Resources()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'Resources.Resources()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'Resources.Resources()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'Resources.Resources()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'Resources.Resources()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'Resources.Resources()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'Resources.Resources()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'Resources.Resources()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'Resources.Resources()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'Resources.Resources()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'Resources.Resources()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'Resources.Resources()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'Resources.Resources()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'Resources.Resources()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#appLauncherIconPath" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Resources.appLauncherIconPath' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BODIES" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="BODIES" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'BODIES' in member name 'Resources.BODIES' by changing it to 'Bodies'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#boxOutlineStyle" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Resources.boxOutlineStyle' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#btnAscendingIcon" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="btn" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'btn' in member name 'Resources.btnAscendingIcon' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Resources.btnAscendingIcon' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#btnBodies" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="btn" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'btn' in member name 'Resources.btnBodies' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Resources.btnBodies' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#btnDescendingIcon" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="btn" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'btn' in member name 'Resources.btnDescendingIcon' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Resources.btnDescendingIcon' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#btnDownArrow" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="btn" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'btn' in member name 'Resources.btnDownArrow' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Resources.btnDownArrow' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#btnExtendedHoverBackground" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="btn" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'btn' in member name 'Resources.btnExtendedHoverBackground' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Resources.btnExtendedHoverBackground' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#btnExtendedIconClose" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="btn" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'btn' in member name 'Resources.btnExtendedIconClose' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Resources.btnExtendedIconClose' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#btnExtendedIconOpen" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="btn" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'btn' in member name 'Resources.btnExtendedIconOpen' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Resources.btnExtendedIconOpen' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#btnExtendedPressedBackground" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="btn" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'btn' in member name 'Resources.btnExtendedPressedBackground' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Resources.btnExtendedPressedBackground' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#btnFlatHoverBackground" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="btn" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'btn' in member name 'Resources.btnFlatHoverBackground' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Resources.btnFlatHoverBackground' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#btnFlatNormalBackground" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="btn" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'btn' in member name 'Resources.btnFlatNormalBackground' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Resources.btnFlatNormalBackground' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#btnFlatPressedBackground" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="btn" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'btn' in member name 'Resources.btnFlatPressedBackground' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Resources.btnFlatPressedBackground' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#btnFold" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="btn" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'btn' in member name 'Resources.btnFold' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Resources.btnFold' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#btnFoldHover" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="btn" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'btn' in member name 'Resources.btnFoldHover' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Resources.btnFoldHover' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#btnGo" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="btn" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'btn' in member name 'Resources.btnGo' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Resources.btnGo' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#btnGoHover" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="btn" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'btn' in member name 'Resources.btnGoHover' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Resources.btnGoHover' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#btnHiddenIcon" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="btn" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'btn' in member name 'Resources.btnHiddenIcon' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Resources.btnHiddenIcon' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#btnOrbitIcon" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="btn" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'btn' in member name 'Resources.btnOrbitIcon' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Resources.btnOrbitIcon' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#btnTarg" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Targ" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Targ' in member name 'Resources.btnTarg' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="btn" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'btn' in member name 'Resources.btnTarg' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Resources.btnTarg' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#btnTargetAlpha" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="btn" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'btn' in member name 'Resources.btnTargetAlpha' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Resources.btnTargetAlpha' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#btnTargHover" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Targ" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Targ' in member name 'Resources.btnTargHover' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="btn" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'btn' in member name 'Resources.btnTargHover' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Resources.btnTargHover' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#btnTerminateHoverBackground" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="btn" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'btn' in member name 'Resources.btnTerminateHoverBackground' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Resources.btnTerminateHoverBackground' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#btnTerminateNormalBackground" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="btn" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'btn' in member name 'Resources.btnTerminateNormalBackground' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Resources.btnTerminateNormalBackground' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#btnUpArrow" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="btn" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'btn' in member name 'Resources.btnUpArrow' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Resources.btnUpArrow' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#buttonDockingPortTarget" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Resources.buttonDockingPortTarget' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#buttonExpandStyle" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Resources.buttonExpandStyle' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#buttonExtendedStyle" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Resources.buttonExtendedStyle' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#buttonFlatStyle" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Resources.buttonFlatStyle' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#buttonFoldStyle" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Resources.buttonFoldStyle' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#buttonGoStyle" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Resources.buttonGoStyle' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#buttonRenameStyle" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Resources.buttonRenameStyle' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#buttonSearchClearStyle" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Resources.buttonSearchClearStyle' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#buttonTargStyle" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Targ" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Targ' in member name 'Resources.buttonTargStyle' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Resources.buttonTargStyle' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#buttonTerminateStyle" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Resources.buttonTerminateStyle' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#buttonTextOnly" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Resources.buttonTextOnly' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#buttonVesselListName" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Resources.buttonVesselListName' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#buttonVesselListNameAct" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Resources.buttonVesselListNameAct' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#buttonVesselListPressed" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Resources.buttonVesselListPressed' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#buttonVesselTypeStyle" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="TypeStyle" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error">The compound word 'TypeStyle' in member name 'Resources.buttonVesselTypeStyle' exists as a discrete term. If your usage is intended to be single word, case it as 'Typestyle' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Resources.buttonVesselTypeStyle' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CelestialBodies" Kind="Property" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;CelestialBody&gt;' in 'Resources.CelestialBodies' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#emptyStyle" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Resources.emptyStyle' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#hrSepLineStyle" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="hr" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'hr' in member name 'Resources.hrSepLineStyle' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Resources.hrSepLineStyle' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#imgLine" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="img" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'img' in member name 'Resources.imgLine' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Resources.imgLine' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#imgOutline" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="img" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'img' in member name 'Resources.imgOutline' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Resources.imgOutline' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#imgOutlineBorder" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="img" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'img' in member name 'Resources.imgOutlineBorder' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Resources.imgOutlineBorder' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#imgVesselInfoHover" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="img" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'img' in member name 'Resources.imgVesselInfoHover' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Resources.imgVesselInfoHover' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#imgVesselInfoNormal" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="img" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'img' in member name 'Resources.imgVesselInfoNormal' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Resources.imgVesselInfoNormal' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#imgVesselInfoPressed" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="img" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'img' in member name 'Resources.imgVesselInfoPressed' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Resources.imgVesselInfoPressed' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#imgVesselInfoSelected" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="img" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'img' in member name 'Resources.imgVesselInfoSelected' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Resources.imgVesselInfoSelected' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#imgVesselListButtonBorder" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="img" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'img' in member name 'Resources.imgVesselListButtonBorder' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Resources.imgVesselListButtonBorder' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#imgVesselListButtonPressed" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="img" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'img' in member name 'Resources.imgVesselListButtonPressed' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Resources.imgVesselListButtonPressed' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LoadStyles(System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error">Replace method 'Resources.LoadStyles(bool)' with an overload that supplies all default arguments.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LoadTextures()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="HaystackReContinued.HSUtils.Log(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\Users\jbb\github\HaystackContinued\HaystackContinued" File="Resources.cs" Line="158">Method 'Resources.LoadTextures()' passes a literal string as parameter 'message' of a call to 'HSUtils.Log(string)'. Retrieve the following string(s) from a resource table instead: "Exception caught, probably failed to load file".</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError">Modify 'Resources.LoadTextures()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PathImages" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Resources.PathImages' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PathPlugin" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Resources.PathPlugin' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PopulateVesselTypes(System.Collections.Generic.List`1&lt;HaystackReContinued.HSVesselType&gt;&amp;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError">Modify 'Resources.PopulateVesselTypes(ref List&lt;HSVesselType&gt;)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="0#" TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="CriticalWarning">Consider a design that does not require that 'list' be a reference parameter.</Issue>
            </Message>
            <Message Id="System.String.ToLower" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error">Because the behavior of 'string.ToLower()' could vary based on the current user's locale settings, replace this call in 'Resources.PopulateVesselTypes(ref List&lt;HSVesselType&gt;)' with a call to 'string.ToLower(CultureInfo)'. If the result of 'string.ToLower(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Certainty="95" Level="Error">Because the behavior of 'string.ToLower()' could vary based on the current user's locale settings, replace this call in 'Resources.PopulateVesselTypes(ref List&lt;HSVesselType&gt;)' with a call to 'string.ToLower(CultureInfo)'. If the result of 'string.ToLower(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'Resources.PopulateVesselTypes(ref List&lt;HSVesselType&gt;)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="DependsOnFix">
             <Issue Name="Reassigned" Certainty="75" Level="Warning" Path="D:\Users\jbb\github\HaystackContinued\HaystackContinued" File="Resources.cs" Line="229">In externally visible method 'Resources.PopulateVesselTypes(ref List&lt;HSVesselType&gt;)', validate local variable ''(*list)'', which was reassigned from parameter 'list', before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#resizeBoxStyle" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Resources.resizeBoxStyle' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#rnd" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="rnd" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'rnd' in member name 'Resources.rnd' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Resources.rnd' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#textDockingPortDistanceStyle" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Resources.textDockingPortDistanceStyle' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#textDockingPortHeaderStyle" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Resources.textDockingPortHeaderStyle' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#textDockingPortStyle" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Resources.textDockingPortStyle' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#textExpandedVesselNameStyle" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Resources.textExpandedVesselNameStyle' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#textListHeaderStyle" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Resources.textListHeaderStyle' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#textSearchStyle" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Resources.textSearchStyle' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#textSituationStyle" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Resources.textSituationStyle' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#textVesselExpandedInfoItem" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Resources.textVesselExpandedInfoItem' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToolbarIcon" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Toolbar" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeCompoundWord" Certainty="80" Level="Error">The discrete term 'Toolbar' in member name 'Resources.ToolbarIcon' should be expressed as a compound word, 'ToolBar'.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Resources.ToolbarIcon' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToolbarIconPath" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Toolbar" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeCompoundWord" Certainty="80" Level="Error">The discrete term 'Toolbar' in member name 'Resources.ToolbarIconPath' should be expressed as a compound word, 'ToolBar'.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Resources.ToolbarIconPath' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#tooltipBoxStyle" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Resources.tooltipBoxStyle' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#vesselInfoDefault" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Resources.vesselInfoDefault' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#vesselInfoSelected" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Resources.vesselInfoSelected' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#vesselTypesList" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;HSVesselType&gt;' in 'Resources.vesselTypesList' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Resources.vesselTypesList' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#winStyle" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Resources.winStyle' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ScenarioModuleLoader" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#setupScenarioModule()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning">The 'this' parameter (or 'Me' in Visual Basic) of 'ScenarioModuleLoader.setupScenarioModule()' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Settings" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#BottomButtons" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">Remove the read-only designation from 'Settings.BottomButtons' or change the field to one that is an immutable reference type. If the reference type 'Settings.GenericIndexer&lt;bool&gt;' is, in fact, immutable, exclude this message.</Issue>
            </Message>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Settings.BottomButtons' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#convertToNewDirectory()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="HaystackReContinued.HSUtils.Log(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\Users\jbb\github\HaystackContinued\HaystackContinued" File="Settings.cs" Line="70">Method 'Settings.convertToNewDirectory()' passes a literal string as parameter 'message' of a call to 'HSUtils.Log(string)'. Retrieve the following string(s) from a resource table instead: "Deleting old settings file.".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\Users\jbb\github\HaystackContinued\HaystackContinued" File="Settings.cs" Line="64">Method 'Settings.convertToNewDirectory()' passes a literal string as parameter 'message' of a call to 'HSUtils.Log(string)'. Retrieve the following string(s) from a resource table instead: "Moving settings file to new location.".</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning">The 'this' parameter (or 'Me' in Visual Basic) of 'Settings.convertToNewDirectory()' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DATA_FOLDER" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Settings.DATA_FOLDER' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Load()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="HaystackReContinued.HSUtils.Log(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="D:\Users\jbb\github\HaystackContinued\HaystackContinued" File="Settings.cs" Line="78">Method 'Settings.Load()' passes a literal string as parameter 'message' of a call to 'HSUtils.Log(string)'. Retrieve the following string(s) from a resource table instead: "loading settings".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#version" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'Settings.version' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WindowPositions" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">Remove the read-only designation from 'Settings.WindowPositions' or change the field to one that is an immutable reference type. If the reference type 'Settings.GenericIndexer&lt;Rect&gt;' is, in fact, immutable, exclude this message.</Issue>
            </Message>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Settings.WindowPositions' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WindowVisibilities" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">Remove the read-only designation from 'Settings.WindowVisibilities' or change the field to one that is an immutable reference type. If the reference type 'Settings.GenericIndexer&lt;bool&gt;' is, in fact, immutable, exclude this message.</Issue>
            </Message>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Settings.WindowVisibilities' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Settings+GenericIndexer`1" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="V" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
           <Issue Name="TypeTypeParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning">On type 'Settings.GenericIndexer&lt;V&gt;', consider providing a more meaningful name than generic type parameter name 'V'.</Issue>
          </Message>
          <Message Id="T" TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
           <Issue Name="TypeTypeParameter" Certainty="95" Level="Error">On type 'Settings.GenericIndexer&lt;V&gt;', prefix generic type parameter name 'V' with 'T'.</Issue>
          </Message>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'Settings.GenericIndexer&lt;V&gt;'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="Startup" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Messages>
          <Message TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
           <Issue Certainty="75" Level="Warning">'Startup' is an internal class that is apparently never instantiated. If so, remove the code from the assembly. If this class is intended to contain only static methods, consider adding a private constructor to prevent the compiler from generating a default constructor.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Start()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2021-07-21 01:55:01Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning">The 'this' parameter (or 'Me' in Visual Basic) of 'Startup.Start()' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Rules>
  <Rule TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210">
   <Name>Assemblies should have valid strong names</Name>
   <Description>Either the assembly has no strong name, an invalid one, or the strong name is valid only because of the computer configuration. The assembly should not be deployed in this state. The most common causes of this are: 1) The assembly's contents were modified after it was signed. 2) The signing process failed. 3) The assembly was delay-signed. 4) A registry key existed that allowed the check to pass (where it would not have otherwise).</Description>
   <Resolution Name="NoStrongName">Sign {0} with a strong name key.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182127.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502">
   <Name>Avoid excessive complexity</Name>
   <Description>Method implementations that are exceedingly complex increase the challenge of understanding and maintaining code.</Description>
   <Resolution Name="Default">{0} has a cyclomatic complexity of {1}. Rewrite or refactor the method to reduce complexity to {2}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182212.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Warning</MessageLevel>
   <File Name="maintainabilityrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811">
   <Name>Avoid uncalled private code</Name>
   <Description>There is uncalled code that is not externally visible and is not a known runtime entry point. If this violation fires in error, please send a problem report to the Visual Studio Code Analysis team.</Description>
   <Resolution Name="Default">{0} appears to have no upstream public or protected callers.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182264.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812">
   <Name>Avoid uninstantiated internal classes</Name>
   <Description>An internal class was detected that is apparently never instantiated. This rule does not attempt to detect late-bound creation and will generate false positives if instances of a type are only created in this way (for example, by means of Activator.CreateInstance or by passing the type as an argument to a TypeConverter constructor).</Description>
   <Resolution Name="Default">{0} is an internal class that is apparently never instantiated. If so, remove the code from the assembly. If this class is intended to contain only static methods, consider adding a private constructor to prevent the compiler from generating a default constructor.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182265.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702">
   <Name>Compound words should be cased correctly</Name>
   <Description>Avoid creating compound words from terms which exist in the dictionary as discrete terms. Do not create a compound word such as 'StopWatch' or 'PopUp'. These terms are recognized in the dictionary and should be cased as 'Stopwatch' and 'Popup'.</Description>
   <Resolution Name="MemberShouldBeCompoundWord">The discrete term '{0}' in member name {1} should be expressed as a compound word, '{2}'.</Resolution>
   <Resolution Name="MemberShouldBeDiscreteTerm">The compound word '{0}' in member name {1} exists as a discrete term. If your usage is intended to be single word, case it as '{2}' or strip the first token entirely if it represents any sort of Hungarian notation.</Resolution>
   <Resolution Name="TypeShouldBeCompoundWord">The discrete term '{0}' in type name {1} should be expressed as a compound word, '{2}'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb264474.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="80">Error</MessageLevel>
   <File Name="namingrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="ConsiderPassingBaseTypesAsParameters" Category="Microsoft.Design" CheckId="CA1011">
   <Name>Consider passing base types as parameters</Name>
   <Description>Using base types as parameters to methods improves re-use of these methods if you only use methods &amp; properties from the parameter's base class. E.g. use Stream instead of FileStream as a parameter when only calling Stream.Read(), this makes the method work on all kind of streams instead of just File streams.</Description>
   <Resolution Name="Default">Consider changing the type of parameter {0} in {1} from {2} to its base type {3}. This method appears to only require base class members in its implementation. Suppress this violation if there is a compelling reason to require the more derived type in the method signature.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/3hk32yyz.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="50">Error</MessageLevel>
   <File Name="designrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009">
   <Name>Declare event handlers correctly</Name>
   <Description>By convention, .NET events have two parameters that specify the event sender and event data. Event handler signatures should follow this form: void MyEventHandler(object sender, EventArgs e). The 'sender' parameter is always of type System.Object, even if it is possible to employ a more specific type. The 'e' parameter is always of type System.EventArgs. Events that do not provide event data should use the System.EventHandler delegate type. Event handlers return void so that they can send each event to multiple target methods. Any value returned by a target would be lost after the first call.</Description>
   <Resolution Name="First">Declare the first parameter of {0} as an object named 'sender'.</Resolution>
   <Resolution Name="Second">Declare the second parameter of {0} as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182133.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026">
   <Name>Default parameters should not be used</Name>
   <Description>Some programming languages do not support default parameters. Replace default parameters with method overloads that supply the default argument.</Description>
   <Resolution Name="Default">Replace method {0} with an overload that supplies all default arguments.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182135.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="designrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303">
   <Name>Do not pass literals as localized parameters</Name>
   <Description>Literal strings that are embedded in source code are difficult to localize. Avoid passing literal strings as arguments in circumstances where a localized string is generally expected.</Description>
   <Resolution Name="KnownValue">Method {0} passes a literal string as parameter '{1}' of a call to {2}. Retrieve the following string(s) from a resource table instead: {3}.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182187.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031">
   <Name>Do not catch general exception types</Name>
   <Description>You should not catch Exception or SystemException. Catching generic exception types can hide run-time problems from the library user, and can complicate debugging. You should catch only those exceptions that you can handle gracefully.</Description>
   <Resolution Name="Default">Modify {0} to catch a more specific exception than {1} or rethrow the exception.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182137.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104">
   <Name>Do not declare read only mutable reference types</Name>
   <Description>A read-only declaration for a mutable reference type does not prevent the field's instance data from being modified. For example, a read-only StringBuilder field declaration does not make sense, since the data encapsulated by the StringBuilder can be modified using the read-only reference.</Description>
   <Resolution Name="Default">Remove the read-only designation from {0} or change the field to one that is an immutable reference type. If the reference type {1} is, in fact, immutable, exclude this message.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182302.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="25">Error</MessageLevel>
   <File Name="securityrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000">
   <Name>Do not declare static members on generic types</Name>
   <Description>The syntax for calling static members on generic types is complex as the type parameter has to be specified for each call.</Description>
   <Resolution Name="Default">Remove {0} from {1} or make it an instance member.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182139.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051">
   <Name>Do not declare visible instance fields</Name>
   <Description>Instance fields that are visible outside of the type that declares them, limit your ability to change the implementation details for those data items. Use properties instead. They do not compromise usability or performance and they do provide flexibility in that they conceal the implementation details of the underlying data.</Description>
   <Resolution Name="Default">Because field {0} is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182141.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="designrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002">
   <Name>Do not expose generic lists</Name>
   <Description>Do not expose List&lt;T&gt; in object models. Use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt; instead. List&lt;T&gt; is meant to be used from implementation, not in object model API. List&lt;T&gt; is optimized for performance at the cost of long term versioning. For example, if you return List&lt;T&gt; to the client code, you will not ever be able to receive notifications when client code modifies the collection.</Description>
   <Resolution Name="Default">Change {0} in {1} to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182142.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806">
   <Name>Do not ignore method results</Name>
   <Description>The result of methods that return new instances of strings should be assigned to a variable and subsequently used. If the result of a method that creates a new object, such as String.ToLower(), is not assigned to a variable, the call is wasted.</Description>
   <Resolution Name="TryParse">{0} calls {1} but does not explicitly check whether the conversion succeeded. Either use the return value in a conditional statement or verify that the call site expects that the out argument will be set to the default value when the conversion fails.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182273.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006">
   <Name>Do not nest generic types in member signatures</Name>
   <Description>Avoid API that require users to instantiate a generic type with another generic type as type argument. The syntax gets too complex.</Description>
   <Resolution Name="Default">Consider a design where {0} doesn't nest generic type {1}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182144.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045">
   <Name>Do not pass types by reference</Name>
   <Description>Although there are legitimate times to use reference parameters, such use frequently indicates a design that does not conform to the design guidelines for managed code.</Description>
   <Resolution Name="Default">Consider a design that does not require that {0} be a reference parameter.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182146.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="designrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="GenericMethodsShouldProvideTypeParameter" Category="Microsoft.Design" CheckId="CA1004">
   <Name>Generic methods should provide type parameter</Name>
   <Description>Methods where the type parameter cannot be inferred from the parameters and therefore has to be defined in the method call are too difficult to understand. Methods with a formal parameter typed as the generic method type parameter support inference. Methods with no formal parameter typed as the generic method type parameter don't support inference.</Description>
   <Resolution Name="Default">Consider a design where {0} doesn't require explicit type parameter {1} in any call to it.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182150.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="designrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709">
   <Name>Identifiers should be cased correctly</Name>
   <Description>Type, namespace, and member identifiers are Pascal-cased. Parameter identifiers are camel-cased. Two letter acronyms within these identifiers should be upper-cased, for example, use System.IO instead of System.Io. Acronyms of three or more letters should be Pascal-cased, for example, use System.Xml instead of System.XML. The pascal-casing convention capitalizes the first letter of each word, as in BackColor. The camel-casing convention formats the first letter of the first word in lowercase and capitalizes the first letter of all subsequent words, as in backgroundColor. Although it may be common practice for some two letter acronyms to not be fully capitalized, violations of this rule should not be excluded for this reason. For example, 'DbConnection', is common but incorrect; use DBConnection. A violation of this rule might be required for compatibility with existing, non-managed symbol schemes. In general, however, these symbols should not be visible outside the assembly that uses them.</Description>
   <Resolution Name="Assembly">Correct the casing of '{0}' in assembly name {1} by changing it to '{2}'.</Resolution>
   <Resolution Name="Member">Correct the casing of '{0}' in member name {1} by changing it to '{2}'.</Resolution>
   <Resolution Name="Namespace">Correct the casing of '{0}' in namespace name '{1}' by changing it to '{2}'.</Resolution>
   <Resolution Name="Type">Correct the casing of '{0}' in type name {1} by changing it to '{2}'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182240.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="85">Error</MessageLevel>
   <File Name="namingrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704">
   <Name>Identifiers should be spelled correctly</Name>
   <Description>The individual words that make up an identifier should not be abbreviated and should be spelled correctly. If this rule generates a false positive on a term that should be recognized, add the word to the FxCop custom dictionary.</Description>
   <Resolution Name="Member">Correct the spelling of '{0}' in member name {1} or remove it entirely if it represents any sort of Hungarian notation.</Resolution>
   <Resolution Name="MemberParameter">In method {0}, correct the spelling of '{1}' in parameter name {2} or remove it entirely if it represents any sort of Hungarian notation.</Resolution>
   <Resolution Name="MemberParameterMoreMeaningfulName">In method {0}, consider providing a more meaningful name than parameter name {1}.</Resolution>
   <Resolution Name="MethodTypeParameterMoreMeaningfulName">On method {0}, consider providing a more meaningful name than generic type parameter name {1}.</Resolution>
   <Resolution Name="TypeTypeParameterMoreMeaningfulName">On type {0}, consider providing a more meaningful name than generic type parameter name {1}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb264492.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">CriticalWarning</MessageLevel>
   <File Name="namingrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldHaveCorrectPrefix" Category="Microsoft.Naming" CheckId="CA1715">
   <Name>Identifiers should have correct prefix</Name>
   <Description>Prefix interface names with the letter 'I' to indicate that the type is an interface, as in IFormattable. Prefix generic type parameter names with the letter 'T' and provide them with descriptive names, as in Dictionary&lt;TKey, TValue&gt;, unless a single 'T' is completely self-explanatory, as in Collection&lt;T&gt;. Use Pascal casing for both interface and type parameter names. Use abbreviations sparingly. Do not use the underscore character. Do use similar names when defining a class/interface pair where the class is a standard implementation of the interface. The names should differ only by the letter I prefixed on the interface name, as with Component and IComponent.</Description>
   <Resolution Name="MethodTypeParameter">On method {0}, prefix generic type parameter name {1} with 'T'.</Resolution>
   <Resolution Name="TypeTypeParameter">On type {0}, prefix generic type parameter name {1} with 'T'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182243.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710">
   <Name>Identifiers should have correct suffix</Name>
   <Description>Types that extend certain base types have specified name suffixes. Types that extend Attribute, for example, should be suffixed in 'Attribute', as in ObsoleteAttribute. This rules checks types that extend several base types, including Attribute, Exception, EventArgs, IMembershipPermission, Stream, and others.</Description>
   <Resolution Name="Default">Rename {0} to end in '{1}'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182244.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="InitializeReferenceTypeStaticFieldsInline" Category="Microsoft.Performance" CheckId="CA1810">
   <Name>Initialize reference type static fields inline</Name>
   <Description>Static fields should be initialized when declared. Initializing static data in explicit static constructors results in less performant code.</Description>
   <Resolution Name="Default">Initialize all static fields in {0} when those fields are declared and remove the explicit static constructor.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182275.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">CriticalWarning</MessageLevel>
   <File Name="performancerules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204">
   <Name>Literals should be spelled correctly</Name>
   <Description>This rule parses the literal string into words, tokenizing compound words, and checks the spelling of each word/token.</Description>
   <Resolution Name="Default">Correct the spelling of the unrecognized token '{0}' in the literal '{1}'.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/bb264488.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014">
   <Name>Mark assemblies with CLSCompliantAttribute</Name>
   <Description>Assemblies should explicitly state their CLS compliance using the CLSCompliant attribute. An assembly without this attribute is not CLS-compliant. Assemblies, modules, and types can be CLS-compliant even if some parts of the assembly, module, or type are not CLS-compliant. The following rules apply: 1) If the element is marked CLSCompliant, any noncompliant members must have the CLSCompliant attribute present with its argument set to false. 2) A comparable CLS-compliant alternative member must be supplied for each member that is not CLS-compliant.</Description>
   <Resolution Name="Default">Mark {0} with CLSCompliant(true) because it exposes externally visible types.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182156.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822">
   <Name>Mark members as static</Name>
   <Description>Methods which do not access instance data or call instance methods can be marked as static (Shared in Visual Basic). After doing so, the compiler will emit non-virtual call sites to these members which will prevent a check at runtime for each call that ensures the current object pointer is non-null. This can result in a measurable performance gain for performance-sensitive code. In some cases, the failure to access the current object instance represents a correctness issue.</Description>
   <Resolution Name="Default">The 'this' parameter (or 'Me' in Visual Basic) of {0} is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms245046.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034">
   <Name>Nested types should not be visible</Name>
   <Description>Do not use public, protected or protected internal (Protected Friend) nested types as a way of grouping types. Use namespaces for this purpose. There are very limited scenarios where nested types are the best design. Also, nested type member accessibility is not clearly understood by all audiences. Enumerators are exempt from this rule.</Description>
   <Resolution Name="Default">Do not nest type {0}. Alternatively, change its accessibility so that it is not externally visible.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182162.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="designrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211">
   <Name>Non-constant fields should not be visible</Name>
   <Description>Static fields should be constant unless you carefully manage access to the field using locks. Using static variables without making them thread safe can compromise execution state. This rule applies to managed code libraries. If the analyzed assembly is an application, it is usually safe to exclude violations of this rule.</Description>
   <Resolution Name="Default">Consider making {0} non-public or a constant.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182353.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="ParameterNamesShouldNotMatchMemberNames" Category="Microsoft.Naming" CheckId="CA1719">
   <Name>Parameter names should not match member names</Name>
   <Description>Parameter names should be distinct from member names.</Description>
   <Resolution Name="Default">Change either member or parameter name {0} so that one differs from the other.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182252.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801">
   <Name>Review unused parameters</Name>
   <Description>Review parameters in non-virtual methods that are not used in the method body to ensure no correctness exists around failure to access them. Unused parameters incur maintenance and performance costs. Sometimes a violation of this rule can point to an implementation bug in the method (i.e. the parameter should actually have been used in the method body). Exclude warnings of this rule if the parameter has to exist because of backward compatibility.</Description>
   <Resolution Name="Default">Parameter {0} of {1} is never used. Remove the parameter or use it in the method body.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182268.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304">
   <Name>Specify CultureInfo</Name>
   <Description>If an overload exists that takes a CultureInfo argument, it should always be called in favor of an overload that does not. The CultureInfo type contains culture-specific information required for performing numeric and string operations, such as casing, formatting, and string comparisons. In scenarios where conversion and parsing behavior should never change between cultures, specify CultureInfo.InvariantCulture, otherwise, specify CultureInfo.CurrentCulture.</Description>
   <Resolution Name="Default">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182189.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305">
   <Name>Specify IFormatProvider</Name>
   <Description>If an overload exists that takes an IFormatProvider argument, it should always be called in favor of an overload that does not. Some methods in the runtime convert a value to or from a string representation and take a string parameter that contains one or more characters, called format specifiers, which indicate how the value is to be converted. If the meaning of the format specifier varies by culture, a formatting object supplies the actual characters used in the string representation. In scenarios where sorting and comparison behavior should never change between cultures, specify CultureInfo.InvariantCulture, otherwise, specify CultureInfo.CurrentCulture.</Description>
   <Resolution Name="IFormatProviderAlternateString">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be displayed to the user, specify {3} as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify {4}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182190.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307">
   <Name>Specify StringComparison</Name>
   <Description>If an overload exists that takes a StringComparison argument, it should always be called in favor of an overload that does not.</Description>
   <Resolution Name="Default">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb386080.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820">
   <Name>Test for empty strings using string length</Name>
   <Description>To test for empty strings, check if String.Length is equal to zero. Constructs such as "".Equals(someString) and String.Empty.Equals(someString) are less efficient than testing the string length. Replace these with checks for someString.Length == 0.</Description>
   <Resolution Name="IsNullOrEmpty">Replace the call to {0} in {1} with a call to 'String.IsNullOrEmpty'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182279.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="TypeNamesShouldNotMatchNamespaces" Category="Microsoft.Naming" CheckId="CA1724">
   <Name>Type names should not match namespaces</Name>
   <Description>Identifiers which conflict in whole or in part with namespace names should be avoided. Names that describe the purpose or contents of a type are preferred.</Description>
   <Resolution Name="System">The type name {0} conflicts in whole or in part with the namespace name '{1}' defined in the .NET Framework. Rename the type to eliminate the conflict.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182257.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="TypesThatOwnDisposableFieldsShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1001">
   <Name>Types that own disposable fields should be disposable</Name>
   <Description>Types that declare disposable members should also implement IDisposable. If the type does not own any unmanaged resources, do not implement a finalizer on it.</Description>
   <Resolution Name="DependsOnFix">Implement IDisposable on {0} because it creates members of the following IDisposable types: {1}. If {0} has previously shipped, adding new members that implement IDisposable to this type is considered a breaking change to existing consumers.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182172.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062">
   <Name>Validate arguments of public methods</Name>
   <Description>All reference arguments passed to externally visible methods should be checked against null (Nothing in VB). If appropriate, throw a System.ArgumentNullException when the argument is null.</Description>
   <Resolution Name="Default">In externally visible method {0}, validate parameter '{1}' before using it.</Resolution>
   <Resolution Name="Reassigned">In externally visible method {0}, validate local variable '{1}', which was reassigned from parameter '{2}', before using it.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182182.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500">
   <Name>Variable names should not match field names</Name>
   <Description>Instance field and variable names should not be identical within the same scope.</Description>
   <Resolution Name="Parameter">{0}, a parameter declared in {1}, has the same name as an instance field on the type. Change the name of one of these items.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182216.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="maintainabilityrules.dll" Version="16.0.0.0" />
  </Rule>
 </Rules>
 <Localized>
  <String Key="Category">Category</String>
  <String Key="Certainty">Certainty</String>
  <String Key="CollapseAll">Collapse All</String>
  <String Key="CheckId">Check Id</String>
  <String Key="Error">Error</String>
  <String Key="Errors">error(s)</String>
  <String Key="ExpandAll">Expand All</String>
  <String Key="Help">Help</String>
  <String Key="Line">Line</String>
  <String Key="Messages">message(s)</String>
  <String Key="LocationNotStoredInPdb">[Location not stored in Pdb]</String>
  <String Key="Project">Project</String>
  <String Key="Resolution">Resolution</String>
  <String Key="Rule">Rule</String>
  <String Key="RuleFile">Rule File</String>
  <String Key="RuleDescription">Rule Description</String>
  <String Key="Source">Source</String>
  <String Key="Status">Status</String>
  <String Key="Target">Target</String>
  <String Key="Warning">Warning</String>
  <String Key="Warnings">warning(s)</String>
  <String Key="ReportTitle">Code Analysis Report</String>
 </Localized>
</FxCopReport>
